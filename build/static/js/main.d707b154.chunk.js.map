{"version":3,"sources":["screens/Child/index.js","screens/MyProfile/graphql.js","components/NavBar/index.js","components/Flex/index.js","screens/MyProfile/index.js","screens/NewChildForm/graphql.js","screens/NewChildForm/index.js","components/DataSheet/index.js","components/MonthPicker/index.js","helpers/sums.js","helpers/buildDatasheet.js","screens/Main/graphql.js","screens/Main/index.js","shared/theme.js","screens/Main/mapQueryToKids.js","App.js","registerServiceWorker.js","index.js"],"names":["Child","react_default","a","createElement","FETCH_USER_QUERY","gql","_templateObject","Header","Layout","Wrapper","styled","NavBar_templateObject","StyledLink","Link","_templateObject2","NavBar","to","role","aria-label","avatar","icon","Row","div","Flex_templateObject","FlexRow","_ref","children","Flex_templateObject2","MyProfile_templateObject","UserName","h2","MyProfile_templateObject2","sampleData","labels","datasets","label","fillColor","strokeColor","highlightFill","highlightStroke","data","MyProfile","layout","NavBar_NavBar","react_apollo_browser_umd","query","props","loading","MyProfile_Wrapper","user","Flex_FlexRow","react_chartjs","width","height","CREATE_NEW_CHILD","graphql_templateObject","StyledLayout","NewChildForm_templateObject","VerticalForm","Form","NewChildForm_templateObject2","_templateObject3","NewChildForm","mutation","createChild","mutationProps","formik_esm","initialValues","firstName","lastName","gender","validate","values","errors","onSubmit","console","log","variables","rateAmount","ownerId","isSubmitting","htmlFor","type","id","name","component","NewChildForm_FlexRow","value","disabled","DataSheet_templateObject","formatCurr","Intl","NumberFormat","style","currency","minimumFractionDigits","DataSheet","onCellsChanged","DataSheet_Wrapper","lib_default","valueRenderer","cell","format","changes","MonthDatePicker","DatePicker","MonthPicker","emojiForMonth","onCalendarMonthClick","onChange","monthCellContentRender","moment","dailySum","kids","dateString","reduce","sum","currentChild","childTargetDate","dates","info","rate","hours","PLACEHOLDER_SPACE","readOnly","BASE_HEADERS","HEADERS_PER_KID","buildDatasheet","date","targetMonthNumber","slice","daysInWeeks","Month","create","calendarWeeks","map","week","monthOnFirstDayOfWeek","monthOnLastDayOfWeek","days","day","_moment$format$split","split","_moment$format$split2","Object","slicedToArray","dayOfWeek","month","monthNumber","number","year","formattedDate","formattedDaysInWeek","lastDay","length","toConsumableArray","concat","text","datesToShow","acc","curr","weeklySum","HEADERS","flattenDeep","className","objectSpread","colSpan","valueViewer","_ref2","_ref3","childId","savedDateInDb","notes","Main_graphql_templateObject","CREATE_OR_UPDATE_DATE_MUTATION","graphql_templateObject2","Content","StyledContent","Main_templateObject","Main","refetchQueries","upsertDate","Main_Inner","assign","Inner","state","monthToView","forEach","change","_change$cell$day","_this","dateId","parseFloat","dateObjectId","setState","this","_this2","child","defineProperty","paid","mapQueryToKids","Fragment","MonthPicker_MonthPicker","DataSheet_DataSheet","React","PureComponent","client","ApolloClient","uri","App","BrowserRouter","Switch","Route","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d707b154.chunk.js","sourcesContent":["/**\n* Description here...\n*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Child = () => (\n  <div>Child</div>\n);\n\nexport { Child };\n","import gql from 'graphql-tag';\n\nexport const FETCH_USER_QUERY = gql`\n    query {\n\t    user(where: {\n            id: \"cjntestdudeug0a54rjlfk74x\"\n        }) {\n            firstName\n            lastName\n            children {\n                id\n                firstName\n                rateAmount\n                dates {\n                    id\n                    month\n                    day\n                    year\n                    hours\n                    paid\n                    dateObjectId\n                }\n            }\n        }\n    }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Avatar, Layout } from 'antd';\nimport { Link } from 'react-router-dom';\n\nconst { Header } = Layout;\n\nconst Wrapper = styled(Header)`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    border-bottom: 1px solid #e4e9ee;\n    background-color: #fff;\n    box-shadow: 0 0 25px 0 hsla(0, 0%, 79%, .35);\n    font-size: 1.125rem;\n`;\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: flex-start;\n  height: 100%;\n  >span, h1 {\n    font-size: 20px;\n  }\n  > span {\n    margin-right: .25rem;\n  }\n`;\n\nconst NavBar = () => (\n  <Wrapper>\n    <StyledLink to=\"/\">\n      <span role=\"img\" aria-label=\"baby\">👶</span>\n      <h1>Sitter Sheet</h1>\n    </StyledLink>\n    <Link to=\"/my-profile\">\n      <Avatar icon=\"user\" />\n    </Link>\n  </Wrapper>\n);\n\nexport { NavBar };\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Row = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nexport const FlexRow = ({ children }) => <Row>{children}</Row>;\n\nconst Column = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const FlexColumn = ({ children }) => <Column>{children}</Column>;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Avatar, Layout } from 'antd';\nimport { Query } from 'react-apollo';\nimport { Bar } from 'react-chartjs';\nimport { FETCH_USER_QUERY } from './graphql';\nimport { NavBar } from '../../components/NavBar';\nimport { FlexRow } from '../../components/Flex';\n\nconst Wrapper = styled.div`\n  padding: 2rem 3rem;\n`;\n\nconst UserName = styled.h2`\n    margin: 0 0 0 .5rem;\n`;\n\nconst sampleData = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [\n    {\n      label: 'My First dataset',\n      fillColor: 'rgba(220,220,220,0.5)',\n      strokeColor: 'rgba(220,220,220,0.8)',\n      highlightFill: 'rgba(220,220,220,0.75)',\n      highlightStroke: 'rgba(220,220,220,1)',\n      data: [65, 59, 80, 81, 56, 55, 40],\n    },\n    {\n      label: 'My Second dataset',\n      fillColor: 'rgba(151,187,205,0.5)',\n      strokeColor: 'rgba(151,187,205,0.8)',\n      highlightFill: 'rgba(151,187,205,0.75)',\n      highlightStroke: 'rgba(151,187,205,1)',\n      data: [28, 48, 40, 19, 86, 27, 90],\n    },\n  ],\n};\n\nconst MyProfile = () => (\n  <Layout>\n    <NavBar />\n    <Layout>\n      <Query query={FETCH_USER_QUERY}>\n        {((props) => {\n          if (props.loading) {\n            return <Wrapper>Loading...</Wrapper>;\n          }\n\n          if (\n            !props.data\n            || !props.data.user\n            || !props.data.user.children) {\n            return <div>Something went wrong</div>;\n          }\n\n          return (\n            <Wrapper>\n              <FlexRow>\n                <Avatar icon=\"user\" />\n                <UserName>Brendan Scarano</UserName>\n\n              </FlexRow>\n              <h3>\n2018 Total:\n                {' '}\n                <b>$25,845</b>\n              </h3>\n\n              <Bar data={sampleData} width=\"600\" height=\"250\" />\n            </Wrapper>\n          );\n        })}\n      </Query>\n    </Layout>\n  </Layout>\n);\n\nexport { MyProfile };\n","import gql from 'graphql-tag';\n\nexport const CREATE_NEW_CHILD = gql`\n    mutation CreateChild(\n    $firstName: String!,\n    $lastName: String!,\n    # $birthday: DateTime,\n    $rateAmount: Float!,\n    $gender: Gender!,\n    $ownerId: ID!,\n) {\n  createChild(data: {\n    firstName: $firstName,\n    lastName: $lastName,\n    rateAmount: $rateAmount,\n    gender: $gender,\n    owner: {\n      connect: {\n        id: $ownerId\n      }\n    }\n  }) {\n    firstName\n    lastName\n  }\n}\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Layout } from 'antd';\nimport {\n  Formik, Form, Field, ErrorMessage,\n} from 'formik';\nimport { Mutation } from 'react-apollo';\nimport { NavBar } from '../../components/NavBar';\nimport { CREATE_NEW_CHILD } from './graphql';\n\nconst StyledLayout = styled(Layout)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n    width: 100%;\n    margin: 2rem 0;\n`;\n\nconst VerticalForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n`;\n\nconst FlexRow = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst hourlySelections = () => new Array(40).fill(null).map((_, idx) => idx + 1);\n\nconst NewChildForm = () => (\n  <Mutation mutation={CREATE_NEW_CHILD}>\n    {(createChild, mutationProps) => (\n      <Layout>\n        <NavBar />\n        <StyledLayout>\n          <h1>New Child</h1>\n          <Formik\n            initialValues={{ firstName: '', lastName: '', gender: null }}\n            validate={(values) => {\n              const errors = {};\n              if (!values.firstName) {\n                errors.firstName = 'Required';\n              }\n              return errors;\n            }}\n            onSubmit={(values, props) => {\n              console.log('props', props);\n              console.log('values', values);\n              createChild({\n                variables: {\n                  firstName: values.firstName,\n                  lastName: values.lastName,\n                  gender: values.gender,\n                  /** TODO: Dont hardcode this */\n                  rateAmount: 7,\n                  /** TODO: Dont hardcode this */\n                  ownerId: 'cjntestdudeug0a54rjlfk74x',\n                },\n              });\n            }}\n          >\n            {({ isSubmitting }) => (\n              <VerticalForm>\n                <label htmlFor=\"firstName\">First Name:</label>\n                <Field type=\"text\" id=\"firstName\" name=\"firstName\" />\n                <ErrorMessage name=\"firstName\" component=\"div\" />\n\n                <label htmlFor=\"lastName\">Last Name:</label>\n                <Field type=\"text\" id=\"lastName\" name=\"lastName\" />\n                <ErrorMessage name=\"lastName\" component=\"div\" />\n\n                <FlexRow>\n                  <Field type=\"radio\" name=\"gender\" id=\"boy\" value=\"MALE\" />\n                  <label htmlFor=\"boy\">Boy</label>\n\n                  <Field type=\"radio\" name=\"gender\" id=\"girl\" value=\"FEMALE\" />\n                  <label htmlFor=\"girl\">Girl</label>\n                </FlexRow>\n\n                {/* <label htmlFor=\"rateAmount\">Rate:</label>\n                <Field component=\"select\" id=\"rateAmount\" name=\"rateAmount\">\n                  {hourlySelections().map(value => (\n                    <option key={value} value={value}>{`$${value}`}</option>\n                  ))}\n                </Field> */}\n\n\n                <button type=\"submit\" disabled={isSubmitting}>\n                  Add\n                </button>\n              </VerticalForm>\n            )}\n          </Formik>\n        </StyledLayout>\n      </Layout>\n    )}\n  </Mutation>\n);\n\nexport { NewChildForm };\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ReactDataSheet from 'react-datasheet';\nimport 'react-datasheet/lib/react-datasheet.css';\n\nconst Wrapper = styled.div`\n  .sticky-top-first-row {\n    position: sticky;\n    top: 0;\n  }\n  .sticky-top-second-row {\n    position: sticky;\n    top: 20px;\n  }\n  .sticky-top-third-row {\n    position: sticky;\n    top: 40px;\n  }\n`;\n\nconst formatCurr = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFractionDigits: 2,\n});\n\nconst DataSheet = ({ data, onCellsChanged }) => (\n  <Wrapper>\n    <ReactDataSheet\n      data={data}\n      valueRenderer={cell => (cell.format === 'curr' ? formatCurr.format(cell.value) : cell.value)}\n      onCellsChanged={changes => onCellsChanged(changes)}\n    />\n  </Wrapper>\n);\n\nDataSheet.propTypes = {\n  // TODO: Fill out this object\n  data: PropTypes.array.isRequired,\n};\n\nexport { DataSheet };\n","import React from 'react';\nimport moment from 'moment';\nimport { DatePicker } from 'antd';\n\nconst { MonthPicker: MonthDatePicker } = DatePicker;\n\nconst emojiForMonth = ['❄️', '💌', '🍀', '🌧', '🌻', '✏️', '🎇', '☀️', '🏫', '🎃', '🦃', '🎄'];\n\nconst MonthPicker = ({ onCalendarMonthClick }) => (\n  <MonthDatePicker\n    format=\"MMM YYYY\"\n    onChange={onCalendarMonthClick}\n    monthCellContentRender={value => (\n      <p>\n        {emojiForMonth[moment(value).format('M') - 1]}\n        {' '}\n        {moment(value).format('MMM')}\n      </p>\n    )}\n  />\n);\n\nexport { MonthPicker };\n","/**\n *\n * @param {array} kids - An array of kids being displayed in the time sheet\n * @param {string} dateString - String in format \"MMDDYY\" representing day to sum\n */\nexport const dailySum = (kids, dateString) => kids.reduce((sum, currentChild) => {\n  const childTargetDate = currentChild.dates[dateString];\n  if (currentChild.dates[dateString]) {\n    return sum + (currentChild.info.rate * childTargetDate.hours);\n  }\n\n  return sum + 0;\n}, 0);\n\n/**\n *\n * @param {array} datesToShow - Array of dateStrings to call dailySum on each one individually\n */\nexport const weeklySum = (kids, datesToShow) => datesToShow\n  .map(dateString => dailySum(kids, dateString))\n  .reduce((acc, curr) => acc + curr, 0);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport flattenDeep from 'lodash.flattendeep';\nimport Month from 'calendar-months';\nimport moment from 'moment';\nimport { dailySum, weeklySum } from './sums';\n\nconst PLACEHOLDER_SPACE = { value: ' ', readOnly: true, id: 'space' };\nconst STICKY_TOP_FIRST_ROW = 'sticky-top-first-row';\nconst STICKY_TOP_SECOND_ROW = 'sticky-top-second-row';\nconst STICKY_TOP_THIRD_ROW = 'sticky-top-third-row';\n\nconst BASE_HEADERS = ['Day', 'Month', '#', 'Total', ''];\nconst HEADERS_PER_KID = ['Hours per day', 'Paid/day', 'Notes', ' '];\nconst WEEK_ENDING_ROW = 'week-ending-row';\n\n/**\n *\n * @param {array} kids\n * @param {number} date 'YYYY-MM'\n */\nexport const buildDatasheet = (kids, date) => {\n  const targetMonthNumber = date.slice(-2);\n  const weeks = Month.create(date).calendarWeeks();\n\n  const daysInWeeks = weeks.map((week) => {\n    const monthOnFirstDayOfWeek = week[0].format('MM');\n    const monthOnLastDayOfWeek = week[6].format('MM');\n    if (monthOnFirstDayOfWeek !== targetMonthNumber && monthOnLastDayOfWeek !== targetMonthNumber) {\n      return [];\n    }\n\n    const days = week.map((day) => {\n      const [dayOfWeek, month, monthNumber, number, year, formattedDate] = moment(day).format('ddd MMM MM DD YY MMDDYY').split(' ');\n      return {\n        dayOfWeek, month, monthNumber, number, year, formattedDate,\n      };\n    });\n\n    const formattedDaysInWeek = days.map(day => day.formattedDate);\n    const lastDay = days[days.length - 1];\n\n    console.log('days', days);\n    // CREATE WEEK ENDING ROWS\n    return [\n      ...days,\n      {\n        id: WEEK_ENDING_ROW,\n        text: `WE ${lastDay.month} ${lastDay.number} Total`,\n        value: weeklySum(kids, formattedDaysInWeek),\n      },\n      // PLACEHOLDER_SPACE,\n    ];\n  });\n\n  const HEADERS = [...BASE_HEADERS, ...flattenDeep(kids.map(() => HEADERS_PER_KID))].map(\n    text => ({ value: text, readOnly: true, className: STICKY_TOP_THIRD_ROW }),\n  );\n\n  return [\n    // FIRST ROW: Names with Links to Child Pages\n    [\n      { ...PLACEHOLDER_SPACE, colSpan: 4, className: STICKY_TOP_FIRST_ROW },\n      PLACEHOLDER_SPACE,\n      ...flattenDeep(kids.map(({ info }) => [\n        {\n          value: info.name,\n          colSpan: 3,\n          readOnly: true,\n          valueViewer: () => (\n            <Link to={`/child/${info.id}`}>\n              <span role=\"img\" aria-label=\"child-emoji\">{info.gender === 'MALE' ? '👦 ' : '👧 '}</span>\n              {info.name}\n            </Link>\n          ),\n          className: STICKY_TOP_FIRST_ROW,\n        },\n      ])),\n    ],\n    // SECOND ROW: Rates per child\n    [\n      { ...PLACEHOLDER_SPACE, colSpan: 4, className: STICKY_TOP_SECOND_ROW },\n      PLACEHOLDER_SPACE,\n      ...flattenDeep(kids.map(({ info }) => [{\n        value: `$${info.rate}/hr`,\n        colSpan: 3,\n        readOnly: true,\n        className: STICKY_TOP_SECOND_ROW,\n      }, PLACEHOLDER_SPACE])),\n    ],\n    // THIRD ROW: Headings for each columns\n    HEADERS,\n    // N ROWS: Individual days each with the hours/rate for each child\n    /**\n       * day: IDay -> created by the time function above\n       * IDay {\n       *  dayOfWeek: \"Sun\"\n       *  month: \"Dec\"\n       *  number: \"02\"\n       *  year: \"18\"\n       *  formattedDate: \"120818\"\n       * }\n       */\n\n    ...flattenDeep(daysInWeeks).map(day => (day.id !== WEEK_ENDING_ROW ? [\n      {\n        value: day.dayOfWeek,\n        readOnly: true,\n        type: 'dayOfWeek',\n        className: 'empty-cell',\n      },\n      {\n        value: day.month, readOnly: true, type: 'month', className: 'empty-cell',\n      },\n      {\n        value: day.number, readOnly: true, type: 'dayOfMonth', className: 'empty-cell',\n      },\n      { value: dailySum(kids, day.formattedDate), readOnly: true, format: 'curr' },\n      PLACEHOLDER_SPACE,\n      ...flattenDeep(kids.map(({ info, dates }) => [\n        {\n          value: dates[day.formattedDate] ? dates[day.formattedDate].hours : 0,\n          type: 'hours',\n          childId: info.id,\n          day,\n          savedDateInDb: dates[day.formattedDate],\n        },\n        {\n          value: dates[day.formattedDate] ? (info.rate * dates[day.formattedDate].hours) : 0, type: 'paid', id: info.id, formattedDate: day.formattedDate, format: 'curr', readOnly: true,\n        },\n        {\n          value: dates[day.formattedDate] ? dates[day.formattedDate].notes : '', type: 'notes', id: info.id, formattedDate: day.formattedDate,\n        },\n        PLACEHOLDER_SPACE,\n      ])),\n    ]\n      : [\n        {\n          value: day.text, colSpan: 3, readOnly: true,\n        },\n        {\n          value: day.value, readOnly: true, format: 'curr',\n        },\n        PLACEHOLDER_SPACE,\n        // TODO: FOR EVERY CHILD WEEKLY HOURS SUM AND WEEKLY PAID SUM\n      ]\n    )),\n  ];\n};\n","import gql from 'graphql-tag';\n\nexport const FETCH_USER_QUERY = gql`\n    query {\n\t    user(where: {\n            id: \"cjntestdudeug0a54rjlfk74x\"\n        }) {\n            firstName\n            lastName\n            children {\n                id\n                firstName\n                rateAmount\n                dates {\n                    id\n                    month\n                    day\n                    year\n                    hours\n                    paid\n                    dateObjectId\n                }\n            }\n        }\n    }\n`;\n\nexport const CREATE_OR_UPDATE_DATE_MUTATION = gql`\n    mutation UpsertDate(\n        $dateId: ID,\n        $childId: ID!,\n        $month: Float!,\n        $day: Float!,\n        $year: Float!,\n        $hours: Float!,\n        $dayOfWeek: String!,\n        $dateObjectId: String!,\n    ) {\n        upsertDate(where: {\n            id: $dateId\n        }\n        create: {\n            owner: {\n                connect: {\n                    id: $childId\n                }\n            },\n            month: $month,\n            day: $day,\n            year: $year,\n            hours: $hours,\n            dayOfWeek: $dayOfWeek,\n            dateObjectId: $dateObjectId,\n        }\n        update: {\n            hours: $hours\n        }) {\n            id\n            dateObjectId\n        }\n    }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Layout } from 'antd';\nimport moment from 'moment';\nimport { Mutation, Query } from 'react-apollo';\nimport { DataSheet } from '../../components/DataSheet';\nimport { NavBar } from '../../components/NavBar';\nimport { MonthPicker } from '../../components/MonthPicker';\nimport { theme } from '../../shared/theme';\nimport { buildDatasheet } from '../../helpers/buildDatasheet';\nimport { CREATE_OR_UPDATE_DATE_MUTATION, FETCH_USER_QUERY } from './graphql';\nimport { mapQueryToKids } from './mapQueryToKids';\n\nconst { Content } = Layout;\n\nconst StyledContent = styled(Content)`\n  padding: 2rem 3rem;\n  background-color: ${theme.colors.white};\n`;\n\nconst Main = (props) => (\n  <Mutation\n    mutation={CREATE_OR_UPDATE_DATE_MUTATION}\n    refetchQueries={() => {\n      return [{\n        query: FETCH_USER_QUERY\n      }]\n    }}\n  >\n    {(upsertDate) => {\n      return <Inner upsertDate={upsertDate} {...props} />\n    }}\n  </Mutation>\n)\n\n\nclass Inner extends React.PureComponent {\n  state = {\n    /** TODO: SET MONTH TO VIEW BASED ON PROPS */\n    monthToView: moment().format('YYYY-MM')\n  }\n\n  componentDidMount() {\n    console.log('this.props', this.props);\n  }\n\n  onCellsChanged = (changes) => {\n    changes.forEach(change => {\n      const { number, year, dayOfWeek, formattedDate } = change.cell.day;\n      const { savedDateInDb } = change.cell;\n\n      this.props.upsertDate({\n        variables: {\n          dateId: savedDateInDb ? savedDateInDb.dateId : \"\",\n          childId: change.cell.childId,\n          month: parseFloat(formattedDate.slice(0, 2)),\n          day: parseFloat(number),\n          year: parseFloat(year),\n          hours: parseFloat(change.value) || 0,\n          dayOfWeek,\n          dateObjectId: formattedDate\n        }\n      });\n    })\n  };\n\n  onCalendarMonthClick = (value) => {\n      const formattedDate = moment(value).format('YYYY-MM');\n      this.setState({ monthToView: formattedDate });\n  }\n\n  render() {\n        return (\n          <Layout>\n            <NavBar />\n            <Layout>\n              <Query query={FETCH_USER_QUERY}>\n                {((props) => {\n                  if (props.loading) {\n                    return <div>Loading...</div>;\n                  }\n\n                  if (\n                    !props.data\n                    || !props.data.user\n                    || !props.data.user.children) {\n                    return <div>Something went wrong</div>;\n                  }\n\n                  const children = mapQueryToKids(props.data.user.children);\n                  console.log('children', children)\n                  const data = buildDatasheet(children, this.state.monthToView);\n\n                  return (\n                    <>\n                      <Layout>\n                        <StyledContent>\n                          <MonthPicker onCalendarMonthClick={this.onCalendarMonthClick} />\n                          <DataSheet data={data} onCellsChanged={this.onCellsChanged} />\n                        </StyledContent>\n                      </Layout>\n                    </>\n                  );\n                })}\n              </Query>\n            </Layout>\n          </Layout>\n        )\n  }\n}\n\nexport { Main };\n","export const theme = {\n  heights: {\n    navBar: 64,\n  },\n  colors: {\n    white: '#fff',\n  },\n};\n","/**\ninterface IDate {\n    month: number;\n    day: number;\n    year: number;\n    dayOfWeek: string;\n    paid: number;\n    hours: number;\n    paid?: number;\n    dateObjectId: string;\n}\n\ninterface IChild {\n    id: string;\n    firstName: string;\n    rateAmount: number;\n    dates: IDate[];\n}\n */\n\n// children: IChild[]\nexport const mapQueryToKids = children => children.map(child => ({\n  info: {\n    id: child.id,\n    name: child.firstName,\n    rate: child.rateAmount,\n  },\n  dates: child.dates.reduce((acc, curr) => ({\n    ...acc,\n    [curr.dateObjectId]: {\n      dateId: curr.id,\n      dateObjectId: curr.dateObjectId,\n      hours: curr.hours,\n      paid: curr.paid,\n      notes: '',\n    },\n  }), {}),\n}));\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\n// import { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloProvider } from 'react-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { Child } from './screens/Child';\nimport { MyProfile } from './screens/MyProfile';\nimport { NewChildForm } from './screens/NewChildForm';\nimport { Main } from './screens/Main';\n\nconst client = new ApolloClient({\n  uri: 'https://us1.prisma.sh/brendan-f224bf/hello-world/dev',\n  // cache: new InMemoryCache(),\n});\n\nconst App = () => (\n  <ApolloProvider client={client}>\n    <Router>\n      <Switch>\n        {/* <Redirect from=\"/\" to=\"/Oct-2018\" /> */}\n        <Route exact path=\"/child/:id\" component={Child} />\n        <Route exact path=\"/new-child\" component={NewChildForm} />\n        <Route exact path=\"/my-profile\" component={MyProfile} />\n        <Route exact path=\"/:date\" component={Main} />\n        <Route exact path=\"/\" component={Main} />\n      </Switch>\n    </Router>\n  </ApolloProvider>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}